
S0 -> PROGRAM
PROGRAM -> STATEMENT | FUNCLIST | ε
FUNCLIST -> FUNCDEF FUNCLIST | FUNCDEF
FUNCDEF -> DEF IDENTIFIER OPEN_PAR PARAM_LIST CLOSE_PAR OPEN_CHAVE STATELIST CLOSE_CHAVE
PARAM_LIST -> PARAM,PARAMLIST | PARAM | ε
PARAM -> INT IDENTIFIER | FLOAT IDENTIFIER | STRING IDENTIFIER
STATEMENT -> VAR_DECL SEMI_COLON|ATRIB_STAT SEMI_COLON|PRINT_STAT SEMI_COLON|READ_STAT SEMI_COLON|RETURN_STAT SEMI_COLON|IF_STAT SEMI_COLON|FOR_STAT|OPEN_CHAVE STATE_LIST CLOSE_CHAVE|BREAK SEMI_COLON|SEMI_COLON

VAR_DECL ->

ATRIB_STAT ->
PRINT_STAT ->
READ_STAT ->
RETURN_STAT ->
IF_STAT ->
FOR_STAT ->
STATELIST ->



IDENTIFIER -> LETTERLETTER_OR_DIGIT | LETTER
LETTER_OR_DIGIT -> LETTERLETTER_OR_DIGIT | DIGITLETTER_OR_DIGIT | LETTER | DIGIT





#####    TERMINAL PRODUCTIONS

LETTER -> a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z
DIGIT -> 0|1|2|3|4|5|6|7|8|9

/* keywords */
DEF -> def
INT -> int
FLOAT -> float
STRING -> string
BREAK -> break
PRINT -> print
READ -> read
RETURN -> return
IF -> if
ELSE -> else
FOR -> for
NEW -> new
NULL -> null

/* symbols */
OPEN_PAR -> (
CLOSE_PAR -> )
OPEN_CHAVE -> {
CLOSE_CHAVE -> }
SEMI_COLON -> ;
OPEN_COL -> [
CLOSE_COL -> ]
ASSIGN -> =
COLON -> ,
LESS -> <
GREATER -> >
LESS_EQUAL -> <=
GREATER_EQUAL -> >=
EQUAL -> ==
DIFFERENT -> !=
PLUS -> +
SUBTR -> -
MULT -> *
DIV	 -> /
REMINDER -> %